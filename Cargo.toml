[package]
name = "safe_unaligned_simd"
version = "0.2.2"
edition = "2024"
rust-version = "1.88"
license = "MIT OR Apache-2.0"
exclude = [".github", "tests"]

description = "Safe SIMD wrappers for unaligned load and store operations."
homepage = "https://github.com/okaneco/safe_unaligned_simd"
repository = "https://github.com/okaneco/safe_unaligned_simd"
readme = "README.md"

keywords = ["simd", "vector", "unaligned", "load", "store"]
categories = ["hardware-support", "api-bindings", "no-std"]

[dependencies]

[dev-dependencies]

[target.'cfg(not(target_os = "wasi"))'.dev-dependencies.compiletest_rs]
# This only supports windows and unix types with native code. On other targets
# it uses a fallback that unfortunately assumes that `&ChildStdout` is also
# Read. On `wasi` this is not the case, leading to compile error.
# Upstream issue: https://github.com/Manishearth/compiletest-rs/issues/291
version = "0.11.0"

[features]
default = []
# Enables the AVX512F, "Foundation", instruction set
avx512f = []
# Gain access to unstable features which require the nightly compiler
nightly = []

# Internal feature for target-feature testing
_avx_test = []
# Internal feature for compiletest tests
_assembly_x86 = []

[package.metadata.docs.rs]
no-default-features = true
features = [""]
default-target = "x86_64-unknown-linux-gnu"
targets = ["aarch64-apple-darwin", "aarch64-unknown-linux-gnu", "i686-unknown-linux-gnu", "wasm32-wasip1"]
