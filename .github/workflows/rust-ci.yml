name: Rust CI

on:
  push:
    branches: master
  pull_request:
    branches: master
  schedule:
    - cron: "0 0 1 * *" # monthly
  workflow_dispatch: # allow manual triggering of the action

env:
  RUSTFLAGS: "-Dwarnings"
  RUSTDOCFLAGS: "-Dwarnings"
jobs:
  build-x86:
    name: Build and test crate/docs
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows]
        toolchain: [nightly, beta, stable]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rust-docs

        # Default build, no features
      - name: Build library
        run: cargo build -v --lib --no-default-features
      - name: Test library
        run: cargo test --no-default-features --lib
      - name: Doc tests
        run: cargo test --no-default-features --doc
      - name: Build docs
        run: cargo doc --no-deps --no-default-features

        # AVX target_feature enabled doctest and internal feature test
      - name: Test library (avx feature)
        run: cargo test --no-default-features --lib --features _avx_test
        ## Enable +avx for this test
      - name: Enable +avx for RUSTFLAGS
        env:
          RUSTFLAGS: "-Dwarnings -Ctarget-feature=+avx"
        run: echo "Enabling +avx for RUSTFLAGS - ${{ env.RUSTFLAGS }}"
      - name: Doc tests (avx target feature)
        run: cargo test --no-default-features --doc
        ## Disable +avx
      - name: Reset RUSTFLAGS to default
        env:
          RUSTFLAGS: "-Dwarnings"
        run: echo "Resetting RUSTFLAGS - ${{ env.RUSTFLAGS }}"

        # Nightly feature tests
      - name: Test library (nightly feature)
        if: ${{ matrix.toolchain == 'nightly' }}
        run: cargo test --no-default-features --lib --features nightly
      - name: Doc tests (nightly feature)
        if: ${{ matrix.toolchain == 'nightly' }}
        run: cargo test --no-default-features --doc --features nightly
      - name: Build docs (nightly)
        if: ${{ matrix.toolchain == 'nightly' }}
        run: cargo doc --no-deps --no-default-features --features nightly

  clippy-rustfmt:
    name: Clippy and rustfmt
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - name: clippy
        run: cargo clippy
        continue-on-error: true
      - name: rustfmt
        run: cargo fmt -- --check
        continue-on-error: true

  miri:
    name: Miri
    runs-on: ubuntu-latest
    needs: [build-x86]
    steps:
      - uses: actions/checkout@v4
      - name: Install Miri
        run: |
          rustup toolchain install nightly --component miri
          rustup override set nightly
          cargo miri setup
      - name: Test with Miri, Linux 64-bit target
        run: RUSTFLAGS="-Dwarnings -Ctarget-feature=+avx" cargo miri test --features _avx_test,nightly --target x86_64-unknown-linux-gnu
      - name: Test with Miri, Linux 32-bit target
        run: RUSTFLAGS="-Dwarnings -Ctarget-feature=+avx" cargo miri test --features _avx_test,nightly --target i686-unknown-linux-gnu
